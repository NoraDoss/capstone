version: 2.1

jobs:
  # say-hello
  say-hello:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  # setup environment and test lints
  setup-environment:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies (via Makefile)
          command: |
            make setup
            make install
            make lint
  
        
  # # test lints
  # test-lint:
  #   docker:
  #     - image: python:3.7.3-stretch
  #   steps:
  #     - checkout
  #     - run:
  #         name: make lint
  #         command: |
  #           make lint

  # build docker image
  build-docker:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
      - run:
          name: build docker
          command: |
            apt-get update
            apt-get -y install docker
            ./run_docker.sh
  
  # upload docker to Dockerhub
  upload-docker:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
      - run:
          name: upload docker
          command: |
            apt-get update
            apt-get -y install docker
            ./upload_docker.sh
    
  # deploy docker container to kubernetes
  deploy-docker:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: deploy docker to k8s
          command: |
            brew cask install minikube
            ./run_kubernetes.sh
    



workflows:
  capstone-workflow:
    jobs:
      - say-hello
      - setup-environment:
          requires: [say-hello]
      # - test-lint:
      #     requires: [setup-environment]
      - build-docker:
          requires: [setup-environment]
      - upload-docker:
          requires: [build-docker]
      - deploy-docker:
          requires: [upload-docker]

#