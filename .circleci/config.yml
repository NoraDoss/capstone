version: 2.1

jobs:
  # say-hello
  say-hello:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  # setup environment and test lints
  setup-environment:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: make setup (via Makefile)
          command: |
            make setup
      - run:
          name: make install (via Makefile)
          command: |
            make install
      - run:
          name: make lint (via Makefile)
          command: |
            make lint
  
  # build docker image
  build-docker:
    docker:
      - image: docker:latest
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install dependencies
          command: |
            apk update && apk add bash
      - run:
          name: build docker
          command: |
            ./run_docker.sh
            # ./upload_docker.sh
    
  # # deploy docker container to kubernetes
  # deploy-docker:
  #   docker:
  #     - image: python:3.7.3-stretch
  #   steps:
  #     - checkout
  #     - run:
  #         name: deploy docker to k8s
  #         command: |
  #           brew cask install minikube
  #           ./run_kubernetes.sh
    
  # deploy cluster to aws eks
  deploy-cluster:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run: yum -y install tar gzip
      - run:
          name: install aws eks
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
      - run:
          name: create aws eks cluster
          command: |
            eksctl create cluster --name mycapstone-eksctl-cluster --region=us-east-1
            eksctl utils describe-stacks --region=us-east-1 --cluster=mycapstone-eksctl-cluster
            eksctl get cluster --name=mycapstone-eksctl-cluster --region=us-east-1
      - run:
          name: deploy app
          command: |
            git clone https://github.com/NoraDoss/capstone.git
            cd capstone
            ./run_docker.sh
            kubectl get nodes
            kubectl create deploy mycapstoneproject --image=noradoss/mycapstoneproject
            kubectl get deploy,rs,svc,pods
            kubectl port-forward mycapstoneproject 8000:80



workflows:
  capstone-workflow:
    jobs:
      - say-hello
      - setup-environment:
          requires: [say-hello]
      - build-docker:
          requires: [setup-environment]
      - deploy-cluster:
          requires: [build-docker]