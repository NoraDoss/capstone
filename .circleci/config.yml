version: 2.1

jobs:
  # say-hello
  say-hello:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  # setup environment and test lints
  setup-environment:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: make setup (via Makefile)
          command: |
            make setup
      - run:
          name: make install (via Makefile)
          command: |
            make install
      - run:
          name: make lint (via Makefile)
          command: |
            make lint
  
  # build docker image
  build-docker:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
      - run:
          name: build docker
          command: |
            apt update
            apt-get install snapd
            snap install docker
            # apt install docker.io
            ./run_docker.sh
  
  # upload docker to Dockerhub
  upload-docker:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
      - run:
          name: upload docker
          command: |
            apt update
            apt-get install snapd
            snap install docker
            # apt install docker.io
            ./upload_docker.sh
    
  # deploy docker container to kubernetes
  deploy-docker:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: deploy docker to k8s
          command: |
            brew cask install minikube
            ./run_kubernetes.sh
    
  # deploy kubernetes to aws eks
  deploy-kubernetes:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: install aws eks
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
      - run:
          name: create aws eks cluster
          command: |
            eksctl create cluster
            eksctl get cluster
            git clone https://github.com/NoraDoss/capstone.git
            cd capstone



workflows:
  capstone-workflow:
    jobs:
      - say-hello
      - setup-environment:
          requires: [say-hello]
      - build-docker:
          requires: [setup-environment]
      - upload-docker:
          requires: [build-docker]
      - deploy-docker:
          requires: [upload-docker]
      - deploy-kubernetes:
          requires: [deploy-docker]

#